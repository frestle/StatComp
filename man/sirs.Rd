% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{sirs}
\alias{sirs}
\title{sirs}
\usage{
sirs(
  A,
  y,
  x0,
  maxsize,
  eps,
  a = 0.1,
  delta = 1e-06,
  thresh = 1e-06,
  maxiter = 50L,
  maxseq = 50L,
  tol = 1e-06
)
}
\arguments{
\item{A}{a matrix with dim n*p}

\item{y}{a vector with length n}

\item{x0}{initial set}

\item{maxsize}{maximum size of the sparse model}

\item{eps}{scalar between 0 and 1, downweighting undesirable predictors}

\item{a}{shape parameter of SICA penalty controling its maximum concavity}

\item{delta}{a small ridge parameter for stabilizing matrix inverse. Default = 1e-6}

\item{thresh}{threshold of the circulation. Default = 1e-6}

\item{maxiter}{maximum number of iterations. Default = 50}

\item{maxseq}{maximum number of sequential steps. Default = 50}

\item{tol}{tolerance for updating.  Default = 1e-6}
}
\value{
a coeffcient value in sparse recovery problem
}
\description{
Implemetation of algorithm sequentially and iteratively reweighted squares(SIRS).
}
\examples{
\dontrun{
library(MASS)
n = 100
p = 50
a = 0.4
rho = 0.5
mu = c(rep(0,p))
sigma1 <- matrix(0, p, p)
sigma1 <- rho ^ (abs(row(sigma1) - col(sigma1)))
A = mvrnorm(n,mu,sigma1)
beta = c(0.5,-0.5,1,-1.2,-1,rep(0,p-5))
y = A\%*\%beta
beta_hat=sirs(A,y,x0=rep(1,p),maxsize=min(ceiling(n/2),p),eps=1/p,a=a)
}
}
